import Head from "next/head";
import { useState } from "react";
import dayjs from 'dayjs';
import customParseFormat from 'dayjs/plugin/customParseFormat';

export default function Home() {

  type calculated = number | string

  //Allows for date validation
dayjs.extend(customParseFormat);

//current date
const currentYear = dayjs().year();
const currentMonth = dayjs().month() + 1;
const currentDay = dayjs().date();

  //state
const [day, setDay] = useState("");
const [month, setMonth] = useState("");
const [year, setYear] = useState("");
const [calcYear, setCalcYear] = useState<calculated>("--")
const [calcMonth, setCalcMonth] = useState<calculated>("--")
const [calcDay, setCalcDay] = useState<calculated>("--")
const date = `${year}-${month}-${day}`;

const handleSubmit = () => {
  if(dayjs(date, "YYYY-M-D", true).isValid()){
    console.log("submit true")
    setCalcYear(currentYear - parseInt(year))
    setCalcMonth(Math.abs(currentMonth - parseInt(month)))
    setCalcDay(Math.abs(currentDay - parseInt(day)))
    console.log(calcYear, calcDay, calcMonth)
  } else {
    console.log("submit false")
  }
}

  return (
    <>
      <Head>
        <title>Age Calculator</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-slate-500">
        <div className="w-4/5 max-w-xs h-96 flex flex-col items-center bg-white">
          <form
          className="flex w-4/5 h-1/3 border-b-2 justify-between relative mt-4"
           onSubmit={(e) => {
            e.preventDefault();
            handleSubmit()
          }}>
            <div className="flex flex-col">
              <label className="text-sm text-slate-500" htmlFor="day">DAY</label>
              <input className="w-16 h-10 pl-2 border-2 rounded-sm" id="day" type="number" placeholder="DD" value={day} onChange={(e)=> setDay(e.target.value)}/>
            </div>
            <div className="flex flex-col">
              <label className="text-sm text-slate-500" htmlFor="month">MONTH</label>
              <input className="w-16 h-10 pl-2 border-2 rounded-sm" id="month" type="number" placeholder="MM" value={month} onChange={(e)=> setMonth(e.target.value)}/>
            </div>
            <div className="flex flex-col">
              <label className="text-sm text-slate-500" htmlFor="year">YEAR</label>
              <input className="w-16 h-10 pl-2 border-2 rounded-sm" id="year" type="number" placeholder="YYYY" value={year} onChange={(e) => setYear(e.target.value)}/>
            </div>
            <button className="w-12 h-12 absolute -bottom-6 left-1/2 -translate-x-7 bg-purple-600 rounded-full z-10" type="submit"><svg xmlns="http://www.w3.org/2000/svg" width="46" height="44" viewBox="0 0 46 44"><g fill="none" stroke="#FFF" strokeWidth="2"><path d="M1 22.019C8.333 21.686 23 25.616 23 44M23 44V0M45 22.019C37.667 21.686 23 25.616 23 44"/></g></svg></button>
          </form>
          <section className="w-4/5 h-64 flex flex-col items-start justify-center">
            <p className="text-purple-600 text-5xl">{calcYear} <span className="text-black font-extrabold text-6xl">years</span></p>
            <p className="text-purple-600 text-5xl">{calcMonth} <span className="text-black font-extrabold text-6xl">months</span></p>
            <p className="text-purple-600 text-5xl">{calcDay} <span className="text-black font-extrabold text-6xl">days</span></p>
          </section>
        </div>
      </main>
    </>
  );
}
